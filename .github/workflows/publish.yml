name: Release on Tag

on:
  push:
    tags:
      - '*' # Listen for any tag push events

jobs:
  build:
    runs-on: macos-latest
    permissions: # Add this permissions block
      contents: write
      packages: write
      issues: write
      pull-requests: write
    # strategy:
    #   matrix:
    #     os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
    # Check out the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Node.js and Yarn environment
    - name: Setup Node.js and Yarn
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'yarn'

    # Install dependencies
    - name: Install dependencies
      run: |
        yarn install


    # Build all packages (macOS, Linux, and Windows)
    - name: Build Windows App
      # if: matrix.os == 'windows-latest'
      run: yarn build:win
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build macos packages
      # if: matrix.os == 'macos-latest'
      run: |
        yarn build:mac
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Linux App
      # if: matrix.os == 'ubuntu-latest'
      run: yarn build:linux
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}






  release:
    needs: build  # Wait for build job to complete
    runs-on: ubuntu-latest
    steps:    
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Change Log
            - TODO
          draft: false
          prerelease: false

      - name: Release with attachment
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist_electron/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
